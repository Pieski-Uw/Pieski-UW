version: '${VERSION}'

services:
  django:
    image: 'pieski-uw:latest'
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    restart: unless-stopped
    command: ./server_entrypoint.sh
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DJANGO_RUN_MIGRATIONS=${DJANGO_RUN_MIGRATIONS}
      - DJANGO_INTERNAL_PORT=${DJANGO_INTERNAL_PORT}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_HOST=${REDIS_HOST}
    ports:
      - '${DJANGO_PUBLIC_PORT}:${DJANGO_INTERNAL_PORT}'
    depends_on:
      - postgres-db


  postgres-db:
    image: 'postgres:latest'
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
  
  redis:
    image: 'redis:latest'
    restart: unless-stopped
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redisdata:/data

  celery-worker:
    image: 'pieski-uw:latest'
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    restart: unless-stopped
    command: ./worker_entrypoint.sh
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_HOST=${REDIS_HOST}
    depends_on:
      - postgres-db
      - redis

volumes:
  pgdata:
    driver: local
  redisdata:
    driver: local